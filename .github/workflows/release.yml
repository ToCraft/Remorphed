name: Build and Release

on:
  push:
    paths:
      - '**.gradle'
      - '**.gradle.kts'
      - '**.properties'
      - '**/src/**'
    branches:
      - "main"
      - "master"
  workflow_dispatch:
    inputs:
      release:
        description: 'Release'
        required: false
        default: 'true'
      discord_message:
        description: 'Send Discord Message'
        required: false
        default: 'true'

permissions:
  contents: write
  actions: write

jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[no_release]') && github.event.inputs.release != 'false'
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: "temurin"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Extract Artifact Type, Archive Base Name & Mod Version
        run: |
          cat $GITHUB_WORKSPACE/gradle.properties | grep ^artifact_type= >> $GITHUB_ENV
          cat $GITHUB_WORKSPACE/gradle.properties | grep ^archives_base_name= >> $GITHUB_ENV
          cat $GITHUB_WORKSPACE/gradle.properties | grep ^mod_version= >> $GITHUB_ENV

      - name: Build + Publish to Maven, Modrinth & CurseForge + Pack the ZIP for GH-Release
        run: ./gradlew check build publish modrinth curseforge packTheMod --parallel
        env:
          MAVEN_PASS: ${{ secrets.MAVEN_PASS }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: "${{ env.archives_base_name }}-${{ env.mod_version }}"
          path: |
            build/**/**/libs/
            !build/*/libs/
            !build/**/craftedcore/libs/
            !build/libs/
            !**/*-dev.jar
            !**/*-shadow.jar
            !**/*-transformProduction*.jar
            !**/testmod*/


      - name: Extract Changelog for GitHub
        run: ./gradlew extractNewestChangelog --parallel
      - name: Create version data
        run: |
          cat $GITHUB_WORKSPACE/gradle.properties | grep ^archives_base_name= >> $GITHUB_ENV
          cat $GITHUB_WORKSPACE/gradle.properties | grep ^mod_version= >> $GITHUB_ENV
      - name: Create GitHub Release
        if: |
          ${{ env.artifact_type }} == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ env.mod_version }}"
          files: |
            build/${{ env.archives_base_name }}-${{ env.mod_version }}.zip
          body_path: ${{ github.workspace }}/extracted.CHANGELOG.md
  discord_message:
    name: "Send Discord Release Message"
    runs-on: ubuntu-latest
    if: |
      github.event.inputs.discord_message == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: "temurin"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Send Discord Message
        run: ./gradlew discordRelease --parallel
        env:
          DISCORD_WEB_HOOK: ${{ secrets.DISCORD_WEB_HOOK }}