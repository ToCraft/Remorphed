buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://maven.tocraft.dev/public" }
        mavenLocal()
    }
    dependencies {
        classpath group: 'com.diluv.schoomp', name: 'Schoomp', version: '1.2.6'
        classpath "dev.tocraft:preprocessor:0.111-SNAPSHOT"
    }
}

architectury {
    minecraft = project.name
}

// Read version-specific properties file
project.ext.set("props", new Properties())
file("../../props/${project.name}.properties").withInputStream { project.props.load(it) }

println()
println "Minecraft: ${project.name} (Java ${project.props.java})"
if (project.props.mappings != null) {
    println "├── Parchment: ${project.props.mappings}"
}
if (project.props.fabric != null) {
    println "├── Fabric: ${project.props.fabric}"
}
if (project.props.forge != null) {
    println "├── Forge: ${project.props.forge}"
}
if (project.props.neoforge != null) {
    println "├── NeoForge: ${project.props.neoforge}"
}

List<String> supportedVersions = new ArrayList<>();
supportedVersions.add(project.name)
if (project.props.supported_versions != null) {
    project.props.supported_versions.split(",").each {
        String version = (it as String).trim()
        if (!supportedVersions.contains(version)) {
            supportedVersions.add(version)
        }
    }
}
project.ext.set("supported_versions", supportedVersions)
println("└── Supported Minecraft Versions: ${project.supported_versions}")
println()

apply plugin: "dev.tocraft.preprocessor"

layout.buildDirectory.set(rootDir.toPath().resolve("build/$project.name").toFile())

apply plugin: "dev.tocraft.preprocessor"

subprojects {
    layout.buildDirectory.set(parent.layout.buildDirectory.file(project.name).get().asFile)

    apply plugin: "dev.architectury.loom"
    apply plugin: "maven-publish"
    apply plugin: "dev.tocraft.preprocessor"

    preprocess {
        vars.put("MC", project.props.mc_id != null ? project.props.mc_id : project.name.replaceAll(".", ""))
    }

    repositories {
        mavenLocal()
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${parent.name}"
        mappings loom.layered() {
            officialMojangMappings()
            if (project.hasProperty("parchmentmc_mappings")) {
                parchment("org.parchmentmc.data:parchment-${parent.name}:" + project.getProperty("parchmentmc_mappings") + "@zip")
            }

        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group

    repositories {
        maven { url "https://maven.tocraft.dev/public" }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release.set Integer.parseInt(project.props.java)
    }

    java {
        withSourcesJar()
    }
}

ext {
    mod_meta = [
            minecraft_version: project.name,
            version: version,
            craftedcore_version: craftedcore_version,
            woodwalkers_version: woodwalkers_version
    ]
}
